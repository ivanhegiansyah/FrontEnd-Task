{"ast":null,"code":"import _toConsumableArray from\"D:/Kuliah/Altera-Academy/Task/Frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:/Kuliah/Altera-Academy/Task/Frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{v4 as uuidv4}from\"uuid\";import{createSlice}from\"@reduxjs/toolkit\";var initialValue=[{id:1,title:\"Mengerjakan Exercise\",completed:true,editing:true},{id:2,title:\"Mengerjakan Assignment\",completed:false,editing:true}];export var todoSlice=createSlice({name:\"todo\",initialState:{todos:initialValue},reducers:{deleteContent:function deleteContent(state,action){state.todos=state.todos.filter(function(item){return item.id!==action.payload;});},addContent:function addContent(state,action){console.log(action.payload.title);var newData=_objectSpread({id:uuidv4()},action.payload);state.todos=[].concat(_toConsumableArray(state.todos),[newData]);},editContent:function editContent(state,action){console.log(action.payload.id);state.todos=state.todos.map(function(content){if(content.id===action.payload.id){return _objectSpread(_objectSpread({},content),{},{title:action.payload.title});}else{return content;}});},checkContent:function checkContent(state,action){state.todos=state.todos.map(function(content){if(content.id===action.payload){return _objectSpread(_objectSpread({},content),{},{completed:!content.completed});}else{return content;}});}}});var _todoSlice$actions=todoSlice.actions,deleteContent=_todoSlice$actions.deleteContent,addContent=_todoSlice$actions.addContent,editContent=_todoSlice$actions.editContent,checkContent=_todoSlice$actions.checkContent;export{deleteContent,addContent,editContent,checkContent};export default todoSlice.reducer;","map":{"version":3,"sources":["D:/Kuliah/Altera-Academy/Task/Frontend/src/store/todoSlice.js"],"names":["v4","uuidv4","createSlice","initialValue","id","title","completed","editing","todoSlice","name","initialState","todos","reducers","deleteContent","state","action","filter","item","payload","addContent","console","log","newData","editContent","map","content","checkContent","actions","reducer"],"mappings":"yPAAA,OAASA,EAAE,GAAIC,CAAAA,MAAf,KAA6B,MAA7B,CACA,OAASC,WAAT,KAA4B,kBAA5B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnB,CACEC,EAAE,CAAE,CADN,CAEEC,KAAK,CAAE,sBAFT,CAGEC,SAAS,CAAE,IAHb,CAIEC,OAAO,CAAE,IAJX,CADmB,CAOnB,CACEH,EAAE,CAAE,CADN,CAEEC,KAAK,CAAE,wBAFT,CAGEC,SAAS,CAAE,KAHb,CAIEC,OAAO,CAAE,IAJX,CAPmB,CAArB,CAeA,MAAO,IAAMC,CAAAA,SAAS,CAAGN,WAAW,CAAC,CACnCO,IAAI,CAAE,MAD6B,CAEnCC,YAAY,CAAE,CACZC,KAAK,CAAER,YADK,CAFqB,CAMnCS,QAAQ,CAAE,CACRC,aAAa,CAAE,uBAACC,KAAD,CAAQC,MAAR,CAAmB,CAChCD,KAAK,CAACH,KAAN,CAAcG,KAAK,CAACH,KAAN,CAAYK,MAAZ,CAAmB,SAACC,IAAD,QAAUA,CAAAA,IAAI,CAACb,EAAL,GAAYW,MAAM,CAACG,OAA7B,EAAnB,CAAd,CACD,CAHO,CAKRC,UAAU,CAAE,oBAACL,KAAD,CAAQC,MAAR,CAAmB,CAC7BK,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACG,OAAP,CAAeb,KAA3B,EACA,GAAMiB,CAAAA,OAAO,gBAAKlB,EAAE,CAAEH,MAAM,EAAf,EAAsBc,MAAM,CAACG,OAA7B,CAAb,CACAJ,KAAK,CAACH,KAAN,8BAAkBG,KAAK,CAACH,KAAxB,GAA+BW,OAA/B,GACD,CATO,CAWRC,WAAW,CAAE,qBAACT,KAAD,CAAQC,MAAR,CAAmB,CAC9BK,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACG,OAAP,CAAed,EAA3B,EACAU,KAAK,CAACH,KAAN,CAAcG,KAAK,CAACH,KAAN,CAAYa,GAAZ,CAAgB,SAACC,OAAD,CAAa,CACzC,GAAIA,OAAO,CAACrB,EAAR,GAAeW,MAAM,CAACG,OAAP,CAAed,EAAlC,CAAsC,CACpC,sCAAYqB,OAAZ,MAAqBpB,KAAK,CAAEU,MAAM,CAACG,OAAP,CAAeb,KAA3C,GACD,CAFD,IAEO,CACL,MAAOoB,CAAAA,OAAP,CACD,CACF,CANa,CAAd,CAOD,CApBO,CAsBRC,YAAY,CAAE,sBAACZ,KAAD,CAAQC,MAAR,CAAmB,CAC/BD,KAAK,CAACH,KAAN,CAAcG,KAAK,CAACH,KAAN,CAAYa,GAAZ,CAAgB,SAACC,OAAD,CAAa,CACzC,GAAIA,OAAO,CAACrB,EAAR,GAAeW,MAAM,CAACG,OAA1B,CAAmC,CACjC,sCAAYO,OAAZ,MAAqBnB,SAAS,CAAE,CAACmB,OAAO,CAACnB,SAAzC,GACD,CAFD,IAEO,CACL,MAAOmB,CAAAA,OAAP,CACD,CACF,CANa,CAAd,CAOD,CA9BO,CANyB,CAAD,CAA7B,CAwCA,uBACLjB,SAAS,CAACmB,OADL,CAAQd,aAAR,oBAAQA,aAAR,CAAuBM,UAAvB,oBAAuBA,UAAvB,CAAmCI,WAAnC,oBAAmCA,WAAnC,CAAgDG,YAAhD,oBAAgDA,YAAhD,C,0DAEP,cAAelB,CAAAA,SAAS,CAACoB,OAAzB","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialValue = [\r\n  {\r\n    id: 1,\r\n    title: \"Mengerjakan Exercise\",\r\n    completed: true,\r\n    editing: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"Mengerjakan Assignment\",\r\n    completed: false,\r\n    editing: true,\r\n  },\r\n];\r\n\r\nexport const todoSlice = createSlice({\r\n  name: \"todo\",\r\n  initialState: {\r\n    todos: initialValue,\r\n  },\r\n\r\n  reducers: {\r\n    deleteContent: (state, action) => {\r\n      state.todos = state.todos.filter((item) => item.id !== action.payload);\r\n    },\r\n\r\n    addContent: (state, action) => {\r\n      console.log(action.payload.title);\r\n      const newData = { id: uuidv4(), ...action.payload };\r\n      state.todos = [...state.todos, newData];\r\n    },\r\n\r\n    editContent: (state, action) => {\r\n      console.log(action.payload.id);\r\n      state.todos = state.todos.map((content) => {\r\n        if (content.id === action.payload.id) {\r\n          return { ...content, title: action.payload.title };\r\n        } else {\r\n          return content;\r\n        }\r\n      });\r\n    },\r\n\r\n    checkContent: (state, action) => {\r\n      state.todos = state.todos.map((content) => {\r\n        if (content.id === action.payload) {\r\n          return { ...content, completed: !content.completed };\r\n        } else {\r\n          return content;\r\n        }\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { deleteContent, addContent, editContent, checkContent } =\r\n  todoSlice.actions;\r\nexport default todoSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}